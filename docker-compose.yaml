version: "3.2"
services:

  uploader:
    build: ./uploader
    volumes:
      - ./uploader:/mnt/
      - ./shared:/shared/
    working_dir: /backend/
    command: python api_commands.py
    ports:
      - 80:5000
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=10.84.64.3
      - JWT_SECRET_KEY=1234
      - ROOT=/shared
      - UNPROCCESSED_VIDEOS_NAME=unprocessed_videos
      - PROCESSED_VIDEOS_NAME=processed_videos
      - GCLOUD_PROJECT=ifpv-drone-racing-league-003
      - CS_BUCKET_NAME=ifpv-videos
      - BROKER_URL=10.138.0.16
      - TOPIC_ID=ifpv-videos-topic
      - TOPIC_SCHEMA_PATH=./schema.json
    networks:
      network:

  video-processor:
    build: ./video-processor
    working_dir: /backend/
    command: python subscriber_video_processor.py
    ports:
      - 80:5000
    volumes:
      - ./video-processor:/mnt/
      - ./shared:/shared/
    networks:
      network:
    environment:
      - PUBSUB_VERIFICATION_TOKEN=1234
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=database
      - ROOT=/shared
      - GCLOUD_PROJECT=ifpv-drone-racing-league-003

  authentication:
    build: ./authentication
    volumes:
      - ./authentication:/mnt/
    working_dir: /backend/
    command: python api_commands.py
    ports:
      - 80:5000
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=10.84.64.3
      - JWT_SECRET_KEY=1234
    networks:
      network:

  database:
    image: postgres
    restart: always
    volumes:
      - ./postgres-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/ifpvdl/
    networks:
      network:

  nginx:
    image: nginx:latest
    ports:
      - 5000:443
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./nginx/localhost.key:/etc/ssl/private/localhost.key
    depends_on:
      - uploader
      - authentication
    networks:
      network:

  prometheus:
    image: prom/prometheus:v2.21.0
    ports:
      - 9000:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    networks:
      network:

  grafana:
    image: grafana/grafana:10.4.1
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    networks:
      network:

networks:
  network:

volumes:
  prometheus-data:
  grafana-data: